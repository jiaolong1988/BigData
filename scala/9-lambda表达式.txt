lambda 表达式的语法格式如下：
	(parameters) -> expression
	或
	(parameters) ->{ statements; }
	
以下是lambda表达式的重要特征:
可选类型声明：参数不需要声明类型，编译器可以统一识别参数值。
可选的参数圆括号：一个参数无需定义圆括号，但多个参数需要定义圆括号。
可选的大括号：如果主体包含了一个语句，就不需要使用大括号。
可选的返回关键字：如果主体只有一个表达式返回值则编译器会自动返回值，大括号需要指定明表达式返回了一个数值。

// 1. 不需要参数,返回值为 5  
() => 5  
  
// 2. 接收一个参数(数字类型),返回其2倍的值  
x  => 2 * x  
  
// 3. 接受2个参数(数字),并返回他们的差值  
(x, y) => x – y  
  
// 4. 接收2个int型整数,返回他们的和  
(x:Int, y:Int) => x + y  

注意：
lambda 表达式只能引用标记了val的外层局部变量，不能在 lambda 内部修改 定义在域外 的局部变量，否则会编译错误。
lambda 表达式的局部变量可以不用声明为 val，但是必须不可被后面的代码修改（即隐性的具有 final 的语义）

这就引出了 闭包的概念
闭包是一个特殊的函数，该函数的返回值依赖于声明在函数外部的一个或多个变量。
举例：
var factor = 3  
val multiplier = (i:Int) => i * factor  
multiplier 就是一个闭包
